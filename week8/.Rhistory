setwd("M:/R/Data Analysis/project")
setwd("M:/R/Data Analysis/week8")
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE, comment = NA)
library(ggplot2)
library(dplyr)
library(tidyr)
library(moderndive)
library(skimr)
library(kableExtra)
library(gridExtra)
library(janitor)
library(infer)
library(broom)
slr.model <- lm(score~age, data=evals)
coeff <- slr.model %>% coef()
coeff
ggplot(evals, aes(x = age, y = score)) +
geom_jitter() +
labs(x = "Age", y= "Teaching Score") +
geom_smooth(method = "lm", se = FALSE)
bootstrap_beta_distn <- evals %>%
specify(score ~ age) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "slope")
bootstrap_beta_distn %>% visualize()
percentile_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.95, type = "percentile")
percentile_beta_ci
se_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.99, type = "se", point_estimate = coeff[2])
se_beta_ci
evals_multiple <- evals %>%
select(score, gender, age)
eval.score <- evals %>%
select(score, age, gender)
par.model <- lm(score ~ age + gender, data = eval.score)
coeff <- par.model %>%
coef() %>%
as.numeric()
slopes <- eval.score %>%
group_by(gender) %>%
summarise(min = min(age), max = max(age)) %>%
mutate(intercept = coeff[1]) %>%
mutate(intercept = ifelse(gender == "male", intercept + coeff[3], intercept)) %>%
gather(point, age, -c(gender, intercept)) %>% #gathers columns into rows
# See Data Wrangling Cheat Sheet
mutate(y_hat = intercept + age * coeff[2])
ggplot(eval.score, aes(x = age, y = score, color = gender)) +
geom_jitter() +
labs(x = "Age",
y = "Teaching Score",
color = "Gender") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
ggplot(eval.score, aes(x = age, y = score, color = gender)) +
geom_jitter() +
labs(x = "Age",
y = "Teaching Score",
color = "Gender") +
geom_smooth(method = "lm", se = FALSE)
par.model <- lm(score ~ age + gender, data = evals_multiple)
get_regression_table(par.model) %>%
knitr::kable(
digits = 3,
caption = "Model 1: Regression table with no interaction effect included",
booktabs = TRUE
) %>%
kable_styling(latex_options = "hold_position")
int.model <- lm(score ~ age * gender, data = evals_multiple)
get_regression_table(int.model) %>%
knitr::kable(
digits = 3,
caption = "Model 2: Regression table with interaction effect included",
booktabs = TRUE
) %>%
kable_styling(latex_options = "hold_position")
get_regression_table(slr.model) %>%
knitr::kable(
digits = 3,
caption = "Estimate summaries from the SLR Model of `score` on `age`.",
booktabs = TRUE
) %>%
kable_styling(latex_options = "hold_position")
int.model <- lm(score ~ age * gender, data = evals_multiple)
get_regression_table(int.model) %>%
knitr::kable(
digits = 3,
caption = "Model 2: Regression table with interaction effect included",
booktabs = TRUE
) %>%
kable_styling(latex_options = "hold_position")
mlr.model <- lm(score ~ age * bty_avg, data = evals)
get_regression_table(mlr.model) %>%
knitr::kable(
digits = 3,
caption = "Estimate summaries from the MLR model with age and bty-avg",
booktabs = TRUE
) %>%
kable_styling(latex_options = "hold_position")
library(broom)
model.comp.values.slr.age <- glance( lm(score ~ age, data = evals) )
model.comp.values.slr.age
model.comp.values.slr.bty_avg <- glance( lm(score ~ bty_avg, data = evals) )
model.comp.values.slr.bty_avg
model.comp.values.mlr <- glance( lm(score ~ age + bty_avg, data = evals) )
model.comp.values.mlr
Models <- c('SLR(age)', 'SLR(bty_avg)', 'MLR')
bind_rows(model.comp.values.slr.age, model.comp.values.slr.bty_avg, model.comp.values.mlr, .id="Model") %>%
select(Model, adj.r.squared, AIC, BIC) %>%
mutate(Model=Models) %>%
kable(
digits = 2,
caption = "Model comparison values for different models"
) %>%
kable_styling(latex_options = "hold_position")
library(gridExtra) #Package to display plots side by side
#(like par(mfrow=c(2,2)) in base R)
LAhomes <- read.csv("LAhomes.csv", header = TRUE)
hist1 <- ggplot(LAhomes,aes(x=price))+
geom_histogram()
hist2 <- ggplot(LAhomes,aes(x=sqft))+
geom_histogram()
hist1log <- ggplot(LAhomes,aes(x=log(price)))+
geom_histogram()
hist2log <- ggplot(LAhomes,aes(x=log(sqft)))+
geom_histogram()
plot1 <- ggplot(LAhomes,aes(x=sqft,y=price))+
geom_point()
plot2 <- ggplot(LAhomes,aes(x=log(sqft),y=log(price)))+
geom_point()
grid.arrange(hist1, hist2, hist1log, hist2log, plot1, plot2, ncol=2, nrow=3)
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.count)
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
slopes <- LA.price %>%
group_by(gender) %>%
summarise(min = min(sqft), max = max(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(intercept = ifelse(gender == "male", intercept + coeff[3], intercept)) %>%
gather(point, age, -c(gender, intercept)) %>% #gathers columns into rows
# See Data Wrangling Cheat Sheet
mutate(y_hat = intercept + age * coeff[2])
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft))
ggplot(LA.count, aes(x = age, y = score, color = gender)) +
geom_jitter() +
labs(x = "Age",
y = "Teaching Score",
color = "Gender") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft))
ggplot(LA.price, aes(x = age, y = score, color = gender)) +
geom_jitter() +
labs(x = "Age",
y = "Teaching Score",
color = "Gender") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price, aes(x = log_price, y = log_sqft)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)",
color = "Gender") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price.log, aes(x = log_price, y = log_sqft)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)")
geom_line(data = slopes, aes(y = y_hat), size = 1)
bootstrap_beta_distn <- LAhomes %>%
specify(price ~ sqft) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "slope")
bootstrap_beta_distn %>% visualize()
percentile_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.95, type = "percentile")
percentile_beta_ci
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price.log, aes(x = log_price, y = log_sqft)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
LA.price.log$log_price
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price.log, aes(x = log_sqft, y = log_price)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price.log, aes(x = log_sqft, y = log_price)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)")
geom_line(data = slopes, aes(y = y_hat), size = 1)
bootstrap_beta_distn <- LAhomes %>%
specify(price ~ sqft) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "slope")
bootstrap_beta_distn %>% visualize()
percentile_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.95, type = "percentile")
percentile_beta_ci
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log_sqft * coeff[2])
ggplot(LA.price.log, aes(x = log_sqft, y = log_price)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)") +
geom_line(data = slopes, aes(y = y_hat), size = 1)
coeff[1]
coeff[2]
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price.log, aes(x = log_sqft, y = log_price)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)") +
geom_line(data = LA.price.log, aes(y = y_hat), size = 1)
bootstrap_beta_distn <- LAhomes %>%
specify(price ~ sqft) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "slope")
bootstrap_beta_distn %>% visualize()
percentile_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.95, type = "percentile")
percentile_beta_ci
LA.price <- LAhomes %>%
select(price, sqft)
int.model <- lm(log(price) ~ log(sqft), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_sqft = log(sqft)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(sqft) * coeff[2])
ggplot(LA.price.log, aes(x = log_sqft, y = log_price)) +
geom_jitter() +
labs(x = "log(sqft)",
y = "log(price)") +
geom_line(data = LA.price.log, aes(y = y_hat), size = 1, color="blue")
bootstrap_beta_distn <- LAhomes %>%
specify(price ~ sqft) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "slope")
bootstrap_beta_distn %>% visualize()
percentile_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.95, type = "percentile")
percentile_beta_ci
LA.price <- LAhomes %>%
select(price, bath)
int.model <- lm(log(price) ~ log(bath), data = LA.price)
coeff <- int.model %>%
coef() %>%
as.numeric()
LA.price.log <- LA.price %>%
mutate(log_price = log(price)) %>%
mutate(log_bath = log(bath)) %>%
mutate(intercept = coeff[1]) %>%
mutate(y_hat = intercept + log(bath) * coeff[2])
ggplot(LA.price.log, aes(x = log_bath, y = log_price)) +
geom_jitter() +
labs(x = "log(bath)",
y = "log(price)") +
geom_line(data = LA.price.log, aes(y = y_hat), size = 1, color="blue")
bootstrap_beta_distn <- LAhomes %>%
specify(price ~ bath) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "slope")
#bootstrap_beta_distn %>% visualize()
percentile_beta_ci <- bootstrap_beta_distn %>%
get_ci(level = 0.95, type = "percentile")
#percentile_beta_ci
install.packages("texlive-latex-extra")
library(learnr)
library(ggplot2)
library(dplyr)
library(moderndive)
library(ISLR)
library(skimr)
library(plotly)
library(tidyr)
library(datasets)
library(knitr)
library(janitor)
library(infer)
library(readr)
library(broom)
library(gridExtra)
library(GGally) #Package to produce matrix of 'pairs' plots and more!
knitr::opts_chunk$set(comment = NA, warning = FALSE, message = FALSE)
# Original at https://docs.google.com/spreadsheets/d/1QkOpnBGqOXGyJjwqx1T2O5G5D72wWGfWlPyufOgtkk4/edit#gid=0
read_csv("data/ch9_summary_table - Sheet1.csv", na = "") %>%
kable(
caption = "Table 1: Scenarios of sample statisitics for inference",
booktabs = TRUE
)
